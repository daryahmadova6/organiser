{"version":3,"sources":["components/Header/Header.js","redux/reducer.js","redux/store.js","components/SearchBox/SearchBox.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","components/Favorites/Favorites.js","pages/MainPage/MainPage.js","pages/ListPage/ListPage.js","App.js","index.js"],"names":["Header","className","Component","initialState","list","movies","searchResult","store","createStore","state","action","type","payload","title","Search","i","length","imdbID","movie","item","newList","filter","window","__REDUX_DEVTOOLS_EXTENSION__","SearchBox","searchLine","data","searchLineChangeHandler","e","setState","target","value","searchBoxSubmitHandler","preventDefault","search","fetch","then","res","json","dispatch","this","onSubmit","placeholder","onChange","disabled","MovieItem","props","Title","Year","Poster","addToListMovies","src","alt","onClick","Movies","subscribe","result","getState","map","Favorites","isTitle","id","changeTitleHandler","clickHandlerDelete","clickHandlerSave","console","log","idTemper","push","getPostFetch","method","headers","body","JSON","stringify","MainPage","ListPage","year","match","params","href","App","path","exact","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6f3ba52.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n    render() { \n        return (\n            <header className=\"header\">\n                <h1 className=\"header__title\">\n                    MustSee\n                </h1>\n            </header>\n        );\n    }\n}\n \nexport default Header;","const initialState = {\n   list:[],\n   movies:[],\n   searchResult:''\n}\n\nexport function reducer(state = initialState, action){\n    switch(action.type){\n        case 'SEARCH_BY_TITLE':{\n            \n            return{\n                searchResult: action.payload.title,\n                movies:action.payload.movies.Search,\n                list:state.list\n            }\n            \n        }\n        case 'ADD_TO_LIST':{\n            for(let i=0; i< state.list.length; i++){\n                if(state.list[i].imdbID === action.payload.movie.imdbID){\n                    return state\n                }\n            }\n            const item = action.payload.movie\n            return{\n                ...state,\n                list:[\n                    ...state.list,\n                    {...item}\n                ]\n            }\n        }\n        case 'DELETE_ELEMENT':{\n            const newList = state.list.filter((movie)=>{\n                if(movie.imdbID == action.payload.imdbID){\n                    return false\n                } else {\n                    return true\n                }\n                \n            })\n            return{\n                ...state,\n                list:newList\n            }\n        }\n        \n        default:\n            return state;\n    }\n   \n}\n\n","import { createStore, applyMiddleware } from 'redux';\nimport {reducer} from './reducer';\nimport thunk from 'redux-thunk';\n\n\nlet store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React, { Component } from 'react';\nimport './SearchBox.css';\nimport store from \"../../redux/store\"\nimport { connect } from \"react-redux\";\n\n\nclass SearchBox extends Component {\n    state = {\n        searchLine: '',\n        data:[]\n    }\n    searchLineChangeHandler = (e) => {\n        this.setState({ searchLine: e.target.value });\n        \n    }\n    searchBoxSubmitHandler = (e) => {\n        e.preventDefault();\n        const search = this.state.searchLine\n        const key = 'b14e7045'\n        fetch(`http://www.omdbapi.com/?s=${search}&apikey=${key}`)\n        .then((res)=>res.json())\n        .then((data)=>{\n            store.dispatch({\n                type: 'SEARCH_BY_TITLE',\n                    payload:{\n                        title:this.state.searchLine,\n                        movies:data\n                    }\n                })\n                \n            this.setState({data:data})\n        })\n       \n    }\n\n    componentDidMount(){\n        // store.subscribe(() => {\n            \n        // }) \n    }\n\n    render() {\n        const { searchLine } = this.state;\n\n        return (\n            <div className=\"search-box\">\n                <form className=\"search-box__form\" onSubmit={this.searchBoxSubmitHandler}>\n                    <label className=\"search-box__form-label\">\n                        Искать фильм по названию:\n                        <input\n                            value={searchLine}\n                            type=\"text\"\n                            className=\"search-box__form-input\"\n                            placeholder=\"Например, Shawshank Redemption\"\n                            onChange={this.searchLineChangeHandler}\n                        />\n                    </label>\n                    <button\n                        type=\"submit\"\n                        className=\"search-box__form-submit\"\n                        disabled={!searchLine}\n                    >\n                        Искать\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\n// const functionFromConnect = connect(mapStateToProps, mapDispatchToProps);\n\n \nexport default SearchBox;","import React, { Component } from 'react';\nimport './MovieItem.css';\nimport { connect } from \"react-redux\";\nimport store from \"../../redux/store\"\n\n\nclass MovieItem extends Component {\n    \n    render() {\n        const { Title, Year, Poster, addToListMovies } = this.props;\n        return (\n            <article className=\"movie-item\">\n                <img className=\"movie-item__poster\" src={Poster} alt={Title} />\n                <div className=\"movie-item__info\">\n                    <h3 className=\"movie-item__title\">{Title}&nbsp;({Year})</h3>\n                    <button type=\"button\" className=\"movie-item__add-button\" onClick={addToListMovies}>Добавить в список</button>\n                </div>\n            </article>\n        );\n    }\n}\n\n//const functionFromConnect = connect(mapStateToProps, mapDispatchToProps);\n\n \nexport default MovieItem;","import React, { Component } from 'react';\nimport MovieItem from '../MovieItem/MovieItem';\nimport './Movies.css';\nimport store from \"../../redux/store\"\nimport { connect } from \"react-redux\";\n\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n    }\n\n    addToListMovies=(movie)=>{\n        store.dispatch({\n            type:'ADD_TO_LIST',\n            payload:{\n                movie:movie,\n            }\n        \n        })\n    }\n\n    componentDidMount(){\n        store.subscribe(()=>{\n            const result = store.getState()\n            this.setState({movies:result.movies})\n        })\n    }\n    \n\n    render() { \n        return ( \n            <ul className=\"movies\">\n                {this.state.movies.map((movie) => (\n                    <li className=\"movies__item\" key={movie.imdbID}>\n                        <MovieItem {...movie} addToListMovies={()=>this.addToListMovies(movie)}/>\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n\n//const functionFromConnect = connect(mapStateToProps, mapDispatchToProps);\n\n\nexport default Movies;","import React, { Component } from 'react';\nimport './Favorites.css';\nimport { connect } from \"react-redux\";\nimport store from \"../../redux/store\"\nimport { Link } from 'react-router-dom';\n\n\nclass Favorites extends Component {\n    state = {\n        title: 'Новый список',\n        isTitle:false,\n        list:[],\n        id:[]\n    }\n\n    changeTitleHandler = (e) => {\n        this.setState({title:e.target.value})\n    }\n\n    componentDidMount(){\n        store.subscribe(()=>{\n        const state = store.getState();\n        this.setState({list:state.list})\n        console.log(state.list)\n        let idTemper = []\n        if(this.state.list.length > 0){\n            for(let i = 0; i < this.state.list.length; i++){\n                idTemper.push(this.state.list[i].imdbID);\n            }\n        }\n        this.setState({id:idTemper},()=> this.getPostFetch())\n        })\n        \n\n    }\n\n    getPostFetch(){\n        const newList = {\n            title:this.state.title,\n            movies:this.state.id\n        }\n        fetch('https://acb-api.algoritmika.org/api/movies/list', {\n        method:\"POST\",\n        headers:{\n            \"Content-type\":\"aplication/json\"\n        },\n        body: JSON.stringify(newList)\n        })\n        .then((res)=>res.json())\n        .then((data)=>{\n            console.log(data) \n        })\n    }\n\n    clickHandlerDelete=(imdbID)=>{\n        store.dispatch({\n            type: \"DELETE_ELEMENT\",\n            payload: {\n                imdbID:imdbID\n            },\n          });\n        //  console.log(imdbID)\n        \n    }\n\n    clickHandlerSave=()=>{\n        this.setState({isTitle:true})\n    }\n\n    render() { \n        return (\n            <div className=\"favorites\">\n                <input disabled={this.state.isTitle} value={this.state.title} className=\"favorites__name\" onChange={(e)=>this.changeTitleHandler(e)} />\n                <ul className=\"favorites__list\">\n                    {this.state.list.map((item) => {\n                        return <li key={item.id}>{item.Title} ({item.Year})<button onClick={()=>this.clickHandlerDelete(item.imdbID)}>Удалить</button></li>;\n                    })}\n                </ul>\n                {this.state.isTitle ? <Link>Ссылка</Link> : <button type=\"button\" className=\"favorites__save\" onClick={()=>this.clickHandlerSave()}>Сохранить список</button>}\n            </div>\n        );\n    }\n}\n\n//const functionFromConnect = connect(mapStateToProps, mapDispatchToProps);\n\n \nexport default Favorites;","import React, { Component } from 'react';\nimport './MainPage.css';\nimport Header from '../../components/Header/Header';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport Movies from '../../components/Movies/Movies';\nimport Favorites from '../../components/Favorites/Favorites';\n\nclass MainPage extends Component {\n    render() { \n        return (\n            <div className=\"main-page\">\n                <Header />\n                <main className=\"main-page__content\">\n                    <section className=\"main-page__main-section\">\n                        <div className=\"main-page__search-box\">\n                            <SearchBox />\n                        </div>\n                        <div className=\"main-page__movies\">\n                            <Movies />\n                        </div>\n                    </section>\n                    <aside className=\"main-page__favorites\">\n                        <Favorites />\n                    </aside>\n                </main>\n            </div>\n        );\n    }\n}\n \nexport default MainPage;","import React, { Component } from 'react';\nimport './ListPage.css';\n\nclass ListPage extends Component {\n    state = {\n        movies: [\n            { title: 'The Godfather', year: 1972, imdbID: 'tt0068646' }\n        ]\n    }\n    componentDidMount() {\n        const id = this.props.match.params;\n        console.log(id);\n        // TODO: запрос к сервер на получение списка\n        // TODO: запросы к серверу по всем imdbID\n    }\n    render() { \n        return (\n            <div className=\"list-page\">\n                <h1 className=\"list-page__title\">Мой список</h1>\n                <ul>\n                    {this.state.movies.map((item) => {\n                        return (\n                            <li key={item.imdbID}>\n                                <a href=\"https://www.imdb.com/title/tt0068646/\" target=\"_blank\">{item.title} ({item.year})</a>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n \nexport default ListPage;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage/MainPage';\nimport ListPage from './pages/ListPage/ListPage';\n\nimport './reset.css';\nimport './common.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/list/:id\" exact component={ListPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport store from './redux/store';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}